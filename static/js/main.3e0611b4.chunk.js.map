{"version":3,"sources":["helper/Header.module.css","helper/Footer.module.css","helper/logo.svg","components/configure/Datasource.module.css","helper/Header.js","components/configure/Toggle/Togglebutton.js","components/configure/Stepper/StepperInput.js","helper/Footer.js","components/configure/ColourPicker/Colourpicker.js","components/configure/Datasource.js","components/configure/Datasources.js","helper/func.js","components/configure/Configure.js","components/home/Counter.js","components/home/Home.js","navigation/Main.js","App.js","index.js"],"names":["module","exports","logoBanner","cancel","footerButton","__webpack_require__","p","datasourceCheckbox","Header","_ref","cancelHandler","react_default","a","createElement","id","className","classes","style","height","src","logo","alt","onClick","xmlns","width","viewBox","d","fill","Togglebutton","props","console","log","tableau_ui_min","kind","onItem","updateHandler","items","value","makeOption","item","index","disabled","separator","key","StepperInput","initialState","intervalValue","min","max","step","pageSteps","stepperValue","onValueChange","stepperHandler","Object","assign","onChange","e","intervalHandler","target","map","Footer","applySettingsHandler","resetSettingsHandler","disableButton","Colourpicker","pickerVisible","handleChangeComplete","background","spanStyle","backgroundColor","borderRadius","display","marginTop","border","position","lib","color","onChangeComplete","React","memo","Fragment","checked","datasource","toggleHandler","data","name","Datasources","datasources","length","i","configure_Datasource","initTableau","Promise","resolve","reject","dataSourceFetchPromises","dashboardDataSources","meta","tableau","extensions","dashboardContent","dashboard","worksheets","worksheet","push","getDataSourcesAsync","concat","all","then","fetchResults","forEach","dataSourcesForWorksheet","dataSource","intervalTime","val1","val2","Configure","_useState","useState","_useState2","slicedToArray","setDatasource","_useState3","_useState4","setStepperValue","_useState5","_useState6","setIntervalValue","_useState7","_useState8","setDisableButton","_useState9","_useState10","setPickerVisable","_useState11","_useState12","togglePicker","setTogglePicker","_useState13","_useState14","setBackground","applySettings","dataSourceList","dssource","refreshOnOff","filter","dsource","JSON","stringify","on","settings","set","saveAsync","useEffect","initializeDialogAsync","openPayload","selectedUpdateToggle","get","selectedDataSources","selectedStepperValue","selectedIntervalValue","selectedTimerColour","selectedColourPicker","parse","newArr","keys","helper_Header","ui","closeDialog","checkChange","changeDatasourceCheck","updatedDatasource","toConsumableArray","Stepper_StepperInput","Toggle_Togglebutton","bool","prevState","ColourPicker_Colourpicker","colour","hex","checkDataSourcesList","countDataSources","aria-busy","helper_Footer","erase","Counter","react_countdown_clock_default","state","completions","paused","showMilliseconds","pausedText","seconds","alpha","size","onComplete","stateHandler","clickHandler","Home","counter","setCounter","setPaused","configure","popupUrl","window","location","origin","displayDialogAsync","closePayload","refreshSettings","catch","error","errorCode","ErrorCodes","DialogClosedByUser","message","checkedDataSourcesList","currentState","objectSpread","initializeAsync","minsOrSecs","home_Counter","getdashboard","_loop","dataSourceId","refreshAsync","setTimeout","Main","setOn","updateToggleButtons","react_router","path","exact","render","home_Home","configure_Configure","App","react_router_dom","navigation_Main","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3e0611b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoBanner\":\"Header_logoBanner__3oYGm\",\"cancel\":\"Header_cancel__3Uho3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerButton\":\"Footer_footerButton__2Mo8_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c8d5ff02.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datasourceCheckbox\":\"Datasource_datasourceCheckbox__3nbEj\"};","import React from \"react\";\n\nimport classes from \"./Header.module.css\";\nimport logo from \"./logo.svg\";\n\nfunction Header({ cancelHandler }) {\n  return (\n    <div id=\"topHeader\">\n      <div className={classes.logoBanner}>\n        <img style={{ height: 20 }} src={logo} alt=\"The Information Lab\" />\n      </div>\n      <p className={classes.cancel} onClick={cancelHandler}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\">\n          <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        </svg>\n      </p>\n    </div>\n  );\n}\n\n// removed the overflow hidden here\n\nexport default Header;\n","import React from \"react\";\nimport { Button } from \"@tableau/tableau-ui\";\n\nfunction Togglebutton(props) {\n  console.log(\"[ToggleButton.js renders]\", props);\n  return (\n    <div>\n      <Button kind={props.onItem ? \"primary\" : \"outline\"} onClick={() => props.updateHandler(true)}>\n        On\n      </Button>\n      <Button kind={!props.onItem ? \"destructive\" : \"outline\"} onClick={() => props.updateHandler(false)}>\n        Off\n      </Button>\n    </div>\n  );\n}\n\nexport default Togglebutton;\n","import React from \"react\";\nimport { Stepper, DropdownSelect } from \"@tableau/tableau-ui\";\n\nconst items = [{ value: \"Seconds\" }, { value: \"Minutes\" }];\n\nconst makeOption = (item, index) => (\n  <option disabled={item.disabled || item.separator} key={index} value={item.value}>\n    {item.value}\n  </option>\n);\n\nfunction StepperInput(props) {\n  const initialState = { value: props.intervalValue };\n\n  return (\n    <div>\n      <Stepper\n        min={0}\n        max={1000}\n        step={1}\n        pageSteps={1}\n        value={props.stepperValue}\n        onValueChange={value => {\n          props.stepperHandler(value);\n          console.log(value);\n        }}\n      />\n      <DropdownSelect\n        {...initialState}\n        kind=\"outline\"\n        onChange={e => {\n          console.log(initialState);\n          props.intervalHandler(e.target.value);\n        }}\n      >\n        {items.map(makeOption)}\n      </DropdownSelect>\n    </div>\n  );\n}\n\nexport default StepperInput;\n","import React from \"react\";\nimport { Button } from \"@tableau/tableau-ui\";\nimport classes from \"./Footer.module.css\";\n\nfunction Footer({ applySettingsHandler, resetSettingsHandler, disableButton }) {\n  return (\n    <div>\n      <Button disabled={disableButton} className={classes.footerButton} onClick={resetSettingsHandler}>\n        Reset\n      </Button>\n      <Button className={classes.footerButton} kind=\"primary\" onClick={applySettingsHandler}>\n        Apply\n      </Button>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { CompactPicker } from \"react-color\";\n\nfunction Colourpicker({ updateHandler, pickerVisible, handleChangeComplete, background }) {\n  // if background is selected as white then add little border around\n  const backgroundUpdate = background === \"#ffffff\" ? \"1px solid black\" : \"0px solid black\";\n  // inline style so can modify the background variable\n  const spanStyle = {\n    height: \"35px\",\n    width: \"35px\",\n    backgroundColor: background,\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    marginTop: \"10px\",\n    border: backgroundUpdate\n  };\n  return (\n    <div>\n      <span style={spanStyle} onClick={updateHandler} />\n      {pickerVisible && (\n        <div style={{ position: \"absolute\" }}>\n          <CompactPicker color={background} onChangeComplete={handleChangeComplete} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Colourpicker;\n","import React from \"react\";\nimport { Checkbox } from \"@tableau/tableau-ui\";\n\nimport classes from \"./Datasource.module.css\";\n\nfunction Datasource(props) {\n  return (\n    <>\n      <Checkbox\n        className={classes.datasourceCheckbox}\n        checked={props.datasource.checked}\n        onChange={props.toggleHandler}\n      >\n        {props.datasource.data.name}\n      </Checkbox>\n      <br />\n    </>\n  );\n}\n\nexport default React.memo(Datasource);\n","import React from \"react\";\n\nimport Datasource from \"./Datasource\";\n\nexport const Datasources = React.memo(({ datasources, toggleHandler }) => {\n  console.log(\"[Datasources.js] renders\");\n\n  function DataSourceList() {\n    const listItems = datasources.map((item, i) => (\n      <Datasource\n        key={i}\n        datasource={item}\n        toggleHandler={() => {\n          toggleHandler(i);\n        }}\n      />\n    ));\n    return listItems;\n  }\n\n  return <div>{datasources.length < 1 ? <p>No datasources..</p> : <DataSourceList />}</div>;\n});\n\n// export default Datasources;\n","// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nconst initTableau = () =>\n  // create a new promise for loading the sheets and the subsequent data sources\n  new Promise((resolve, reject) => {\n    console.log(\"[func.js] Initialise Tableau\");\n    var dataSourceFetchPromises = [];\n    var dashboardDataSources = {};\n    const getdashboard = tableau.extensions.dashboardContent.dashboard;\n\n    var meta = getdashboard.worksheets.map(worksheet => {\n      dataSourceFetchPromises.push(worksheet.getDataSourcesAsync());\n      return dataSourceFetchPromises;\n    });\n\n    console.log(`[func.js] Found ${meta.length} sheets`);\n\n    Promise.all(dataSourceFetchPromises).then(fetchResults => {\n      fetchResults.forEach(dataSourcesForWorksheet => {\n        dataSourcesForWorksheet.forEach(dataSource => {\n          if (!dashboardDataSources[dataSource.id]) {\n            dashboardDataSources[dataSource.id] = dataSource;\n          }\n        });\n      });\n      console.log(`[func.js] Meta initialised`);\n      resolve(dashboardDataSources);\n    });\n  });\n\n// set the timer clock to the value specified in the config window\n// if counter is in minutes return interval multiplied by 60\nconst intervalTime = (val1, val2) => {\n  if (val1 === \"Minutes\") {\n    return val2 * 60;\n  } else {\n    return val2;\n  }\n};\n\nexport { initTableau, intervalTime };\n","import React, { useState, useEffect } from \"react\";\nimport { Spinner } from \"@tableau/tableau-ui\";\nimport Header from \"../../helper/Header\";\nimport Togglebutton from \"./Toggle/Togglebutton\";\nimport StepperInput from \"./Stepper/StepperInput\";\nimport Footer from \"../../helper/Footer\";\nimport Colourpicker from \"./ColourPicker/Colourpicker\";\n\nimport { Datasources } from \"../configure/Datasources\";\n// helper functions\nimport { initTableau } from \"../../helper/func\";\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nfunction Configure(props) {\n  const [datasource, setDatasource] = useState();\n  const [stepperValue, setStepperValue] = useState(30);\n  const [intervalValue, setIntervalValue] = useState();\n  const [disableButton, setDisableButton] = useState(false);\n  const [pickerVisible, setPickerVisable] = useState(false);\n  const [togglePicker, setTogglePicker] = useState(false);\n  const [background, setBackground] = useState(\"#000\");\n\n  useEffect(() => {\n    console.log(\"[Configure.js] Initialise Config Screen\", props);\n\n    tableau.extensions.initializeDialogAsync().then(openPayload => {\n      // check if settings still persist\n      let selectedUpdateToggle = tableau.extensions.settings.get(\"updateToggle\");\n      let selectedDataSources = tableau.extensions.settings.get(\"dataSourceList\");\n      let selectedStepperValue = tableau.extensions.settings.get(\"timeRefresh\");\n      let selectedIntervalValue = tableau.extensions.settings.get(\"intervalValue\");\n      let selectedTimerColour = tableau.extensions.settings.get(\"timerColour\");\n      let selectedColourPicker = tableau.extensions.settings.get(\"updateColourPicker\");\n\n      if (selectedUpdateToggle && selectedUpdateToggle !== null) {\n        console.log(\"[Configure.js] Got toggle data from wb\", selectedUpdateToggle);\n        props.updateHandler(JSON.parse(selectedUpdateToggle));\n      } else {\n        props.updateHandler(false);\n      }\n\n      if (selectedStepperValue && selectedStepperValue !== null) {\n        console.log(\"[Configure.js] Got stepper data from wb: \", selectedStepperValue);\n        setStepperValue(JSON.parse(selectedStepperValue));\n      } else {\n        setStepperValue(30);\n      }\n\n      if (selectedIntervalValue && selectedIntervalValue !== null) {\n        console.log(\"[Configure.js] Got timeInterval data from wb: \", selectedIntervalValue);\n        setIntervalValue(JSON.parse(selectedIntervalValue));\n      } else {\n        setIntervalValue(\"Seconds\");\n      }\n\n      if (selectedTimerColour && selectedTimerColour !== null) {\n        console.log(\"[Configure.js] Got background colour from wb: \", selectedTimerColour);\n        setBackground(JSON.parse(selectedTimerColour));\n      } else {\n        setBackground(\"#000\");\n      }\n\n      if (selectedColourPicker && selectedColourPicker !== null) {\n        console.log(\"[Configure.js] Got colour picker info from wb: \", selectedColourPicker);\n        setTogglePicker(JSON.parse(selectedColourPicker));\n      } else {\n        setTogglePicker(false);\n      }\n\n      initTableau().then(meta => {\n        const newArr = Object.keys(meta).map(key => {\n          return { data: meta[key], checked: false };\n        });\n        if (selectedDataSources && selectedDataSources != null) {\n          setDatasource(JSON.parse(selectedDataSources));\n        } else {\n          setDatasource(newArr);\n        }\n      });\n    });\n    return function cleanup() {\n      console.log(\"[Configure.js] Unmounting the component!\");\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function toggle(id) {\n    let checkChange = !datasource[id].checked;\n    let changeDatasourceCheck = { data: datasource[id].data, checked: checkChange };\n    const updatedDatasource = [...datasource];\n    updatedDatasource[id] = changeDatasourceCheck;\n    setDatasource(updatedDatasource);\n  }\n\n  function changeValueFunc(value) {\n    setStepperValue(value);\n  }\n\n  function changeIntervalValueFunc(value) {\n    setIntervalValue(value);\n  }\n\n  // Summary Component if datasources checked\n  function ListCheckedDataSources() {\n    let checkDataSourcesList = datasource.filter(dsource => {\n      return dsource.checked;\n    });\n    console.log(checkDataSourcesList.length);\n    let countDataSources = checkDataSourcesList.length > 0 ? checkDataSourcesList.length : 0;\n    if (countDataSources === 0 && !props.on) {\n      return <p>You are not refreshing any datasource</p>;\n    } else if (!props.on) {\n      return <p>You are not refreshing any datasource</p>;\n    } else if (countDataSources > 0 && props.on) {\n      return (\n        <p>\n          You are refreshing{\" \"}\n          {countDataSources === 1 ? <span>1 datasource</span> : <span>{countDataSources} datasources</span>}, every{\" \"}\n          {stepperValue} {intervalValue}\n        </p>\n      );\n    } else {\n      return <p>You are not refreshing any datasource</p>;\n    }\n  }\n\n  function updateToggleButtons(bool) {\n    props.updateHandler(bool);\n    tableau.extensions.settings.set(\"updateToggle\", bool);\n    tableau.extensions.settings.saveAsync().then(() => {\n      console.log(\"[Configure.js] Saved settings!\");\n    });\n  }\n\n  function updatePicker() {\n    console.log(`[Configure.js] changing the picker state`, pickerVisible);\n    setPickerVisable(prevState => !prevState);\n  }\n\n  function setPickerColour(colour) {\n    setBackground(colour.hex);\n    console.log(`[Configure.js] colour set to`, background);\n  }\n\n  function showHidePicker() {\n    setTogglePicker(prevState => !prevState);\n    console.log(`[Config.js] changing colour picker state`);\n  }\n\n  function applySettings() {\n    console.log(\"[Configure.js] Applying Settings\");\n    // map over the datasources and add to workbook saved settings\n    const dataSourceList = datasource.map(dssource => {\n      return { data: { name: dssource.data.name }, checked: dssource.checked };\n    });\n\n    let newList = dataSourceList.filter(dsource => {\n      return dsource.checked;\n    });\n\n    let refreshOnOff = newList.length === 0 ? JSON.stringify(false) : JSON.stringify(props.on);\n\n    tableau.extensions.settings.set(\"dataSourceList\", JSON.stringify(dataSourceList));\n    tableau.extensions.settings.set(\"timeRefresh\", JSON.stringify(stepperValue));\n    tableau.extensions.settings.set(\"intervalValue\", JSON.stringify(intervalValue));\n    tableau.extensions.settings.set(\"updateToggle\", refreshOnOff);\n    tableau.extensions.settings.set(\"timerColour\", JSON.stringify(background));\n    tableau.extensions.settings.set(\"updateColourPicker\", JSON.stringify(togglePicker));\n\n    tableau.extensions.settings.saveAsync().then(() => {\n      console.log(\"[Configure.js] Saved settings!\");\n    });\n  }\n\n  function resetSettings() {\n    setDisableButton(true);\n    console.log(\"[Configure.js] reset Settings called\");\n    tableau.extensions.settings.erase(\"dataSourceList\");\n    //resetting the toggle\n    tableau.extensions.settings.erase(\"updateToggle\");\n    props.updateHandler(false);\n    setStepperValue(30);\n    setIntervalValue(\"seconds\");\n    setBackground(\"#000\");\n    setTogglePicker(false);\n    initTableau().then(meta => {\n      const newArr = Object.keys(meta).map(key => {\n        return { data: meta[key], checked: false };\n      });\n      setDatasource(newArr);\n    });\n    tableau.extensions.settings.saveAsync().then(() => {\n      console.log(\"[Configure.js] Settings! erased\");\n      setDisableButton(false);\n    });\n  }\n\n  function closeWindow() {\n    console.log(\"[Configure.js] closing the config window...\");\n    applySettings();\n    tableau.extensions.ui.closeDialog();\n  }\n\n  return (\n    <div>\n      <Header cancelHandler={closeWindow} />\n      {!datasource ? (\n        <div className=\"spinner\" aria-busy>\n          <Spinner />\n        </div>\n      ) : (\n        <div className=\"main\">\n          <h4>Select {datasource.length === 1 ? <span>Datasource</span> : <span>Datasources</span>} to refresh</h4>\n          <Datasources datasources={datasource} toggleHandler={toggle} />\n          <h4>Select Refresh Time</h4>\n          <StepperInput\n            stepperValue={stepperValue}\n            stepperHandler={changeValueFunc}\n            intervalValue={intervalValue}\n            intervalHandler={changeIntervalValueFunc}\n          />\n          <h4>Refresh Toggle</h4>\n          <Togglebutton onItem={props.on} updateHandler={updateToggleButtons} />\n          <h4>Display Countdown</h4>\n          <Togglebutton onItem={togglePicker} updateHandler={showHidePicker} />\n          {togglePicker && (\n            <Colourpicker\n              updateHandler={updatePicker}\n              pickerVisible={pickerVisible}\n              background={background}\n              handleChangeComplete={setPickerColour}\n            />\n          )}\n          <h4>Summary:</h4>\n          <ListCheckedDataSources />\n        </div>\n      )}\n      <div className=\"footer\">\n        <Footer\n          applySettingsHandler={applySettings}\n          resetSettingsHandler={resetSettings}\n          disableButton={disableButton}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Configure;\n","import React from \"react\";\n\nimport ReactCountdownClock from \"react-countdown-clock\";\n\nfunction Counter(props) {\n  React.useEffect(() => {\n    console.log(\"[Counter.js] received props\", props);\n  }, [props]);\n\n  return (\n    <>\n      <ReactCountdownClock\n        key={props.state.completions}\n        paused={props.paused}\n        showMilliseconds={props.state.showMilliseconds}\n        pausedText={props.state.pausedText}\n        seconds={props.state.seconds}\n        color={props.state.color}\n        alpha={props.state.alpha}\n        size={props.state.size}\n        bool={props.state.bool}\n        onComplete={props.stateHandler}\n        onClick={props.clickHandler}\n      />\n      <p>{props.state.bool}</p>\n    </>\n  );\n}\n\nexport default Counter;\n","import React, { useEffect, useState } from \"react\";\nimport { intervalTime } from \"../../helper/func\";\n\nimport Counter from \"./Counter\";\n\n// Declare this so our linter knows that tableau is a global object\n/* global tableau */\n\nfunction Home(props) {\n  // create some state\n  const [counter, setCounter] = useState({\n    completions: 1,\n    seconds: 10,\n    showMilliseconds: false,\n    pausedText: \"▐▐ \",\n    color: \"#000\",\n    alpha: 0.9,\n    size: 70\n  });\n  const [paused, setPaused] = useState(true);\n\n  useEffect(() => {\n    console.log(\"[Home.js] Props Changed\", props);\n  }, [props]);\n\n  //Initialise Extension\n  useEffect(() => {\n    tableau.extensions.initializeAsync({ configure: configure }).then(() => {\n      console.log(\"[Home.js] Opening...\");\n      console.log(`[Home.js] checked data source list:`, checkedDataSourcesList());\n\n      //checking if toggle is on or off\n      let selectedUpdateToggle = tableau.extensions.settings.get(\"updateToggle\");\n      //this is list of data sources\n      let selectedDataSources = tableau.extensions.settings.get(\"dataSourceList\");\n      //this is the actually value\n      let selectedStepperValue = tableau.extensions.settings.get(\"timeRefresh\");\n      // minutes or seconds\n      let selectedIntervalValue = tableau.extensions.settings.get(\"intervalValue\");\n      // find the colour from the workbook settings\n      let selectedTimerColour = tableau.extensions.settings.get(\"timerColour\");\n\n      if (selectedUpdateToggle && selectedUpdateToggle !== null) {\n        props.updateHandler(JSON.parse(selectedUpdateToggle));\n        if (selectedDataSources && selectedDataSources !== null) {\n          console.log(`[Home.js] ${JSON.parse(selectedDataSources).length} datasources found`);\n          console.log(\n            `[Home.js] Every ${JSON.parse(selectedStepperValue)} ${JSON.parse(selectedIntervalValue)} going to refresh`\n          );\n          console.log(`[Home.js] Received Colour ${JSON.parse(selectedTimerColour)}`);\n          let minsOrSecs = JSON.parse(selectedIntervalValue) ? JSON.parse(selectedIntervalValue) : \"Seconds\";\n          setPaused(JSON.parse(selectedUpdateToggle) ? false : true);\n          setCounter(currentState => ({\n            ...currentState,\n            seconds: intervalTime(minsOrSecs, JSON.parse(selectedStepperValue)),\n            color: JSON.parse(selectedTimerColour)\n          }));\n        } else {\n          console.log(\"[Home.js] no data sources saved!\");\n          props.updateHandler(false);\n          setPaused(true);\n        }\n      }\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props]);\n\n  function configure() {\n    let payload = \"\";\n    const popupUrl = `${window.location.origin}/configure`;\n    tableau.extensions.ui\n      .displayDialogAsync(popupUrl, payload, { height: 540, width: 400 })\n      .then(closePayload => {\n        console.log(\"Config window closed\");\n        refreshSettings();\n      })\n      .catch(error => {\n        switch (error.errorCode) {\n          case tableau.ErrorCodes.DialogClosedByUser:\n            console.log(\"[Home.js] Dialog was closed by user\");\n            refreshSettings();\n            console.log(\"[Home.js] Config window closed\", props);\n            break;\n          default:\n            console.error(\"[Home.js]\", error.message);\n        }\n      });\n  }\n\n  // when the refreshtimer has finished, execute this function\n  // it increments the number of completions, to make sure the component rerenders\n  const newState = () => {\n    setPaused(paused => !paused);\n    const getdashboard = tableau.extensions.dashboardContent.dashboard;\n    let dataSourceFetchPromises = [];\n    let dashboardDataSources = {};\n\n    getdashboard.worksheets.map(worksheet => {\n      dataSourceFetchPromises.push(worksheet.getDataSourcesAsync());\n    });\n\n    Promise.all(dataSourceFetchPromises).then(fetchResults => {\n      fetchResults.forEach(dataSourcesForWorksheet => {\n        dataSourcesForWorksheet.forEach(dataSource => {\n          if (!dashboardDataSources[dataSource.id]) {\n            dashboardDataSources[dataSource.id] = dataSource;\n          }\n        });\n      });\n      checkedDataSourcesList().map(item => {\n        for (let dataSourceId in dashboardDataSources) {\n          let name = item.data.name;\n          const dataSource = dashboardDataSources[dataSourceId];\n          if (dataSource.name === name) {\n            dataSource.refreshAsync().then(() => {\n              console.log(\"[Home.js] Refreshed \", dataSource);\n            });\n          }\n        }\n      });\n      setTimeout(() => {\n        setPaused(paused => !paused);\n      }, 5000);\n    });\n\n    console.log(\"[Home.js] countdown finished!\");\n    // set the newstate with the new completions number\n    setCounter(currentState => ({\n      ...currentState,\n      completions: currentState.completions + 1\n    }));\n  };\n\n  function checkedDataSourcesList() {\n    let selectedDataSources = tableau.extensions.settings.get(\"dataSourceList\");\n    if (selectedDataSources) {\n      let list = JSON.parse(selectedDataSources);\n      let newList = list.filter(dsource => {\n        return dsource.checked;\n      });\n      return newList;\n    }\n  }\n\n  //function that is being called when config changes and window is closed\n  function refreshSettings() {\n    console.log(\"[Home.js] refreshing settings\", props);\n    let selectedStepperValue = tableau.extensions.settings.get(\"timeRefresh\");\n    let selectedUpdateToggle = tableau.extensions.settings.get(\"updateToggle\");\n    let selectedIntervalValue = tableau.extensions.settings.get(\"intervalValue\");\n    let selectedTimerColour = tableau.extensions.settings.get(\"timerColour\");\n\n    // this sets the pause setting on the timer component\n    if (selectedUpdateToggle) {\n      props.updateHandler(JSON.parse(selectedUpdateToggle));\n      setPaused(JSON.parse(selectedUpdateToggle) ? false : true);\n    }\n    if (selectedUpdateToggle && selectedIntervalValue && selectedStepperValue) {\n      setCounter(currentState => ({\n        ...currentState,\n        seconds: intervalTime(JSON.parse(selectedIntervalValue), JSON.parse(selectedStepperValue)),\n        color: JSON.parse(selectedTimerColour)\n      }));\n    }\n  }\n\n  function handleOnClick() {\n    //checking if toggle is on or off\n    let selectedUpdateToggle = tableau.extensions.settings.get(\"updateToggle\");\n    //this is list of data sources\n    let selectedDataSources = tableau.extensions.settings.get(\"dataSourceList\");\n    if (selectedUpdateToggle && selectedDataSources) {\n      setPaused(paused => !paused);\n    }\n  }\n\n  return (\n    <>\n      <Counter state={counter} stateHandler={newState} paused={paused} clickHandler={handleOnClick} />\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport Configure from \"../components/configure/Configure.js\";\nimport Home from \"../components/home/Home.js\";\n\nfunction Main() {\n  // on is for the first button\n  const [on, setOn] = useState();\n\n  useEffect(() => {\n    console.log(\"[Main.js] mounts\");\n    setOn(true);\n  }, []);\n\n  function updateToggleButtons(bool) {\n    setOn(bool);\n  }\n\n  const renderHome = () => {\n    return <Home on={on} updateHandler={updateToggleButtons} />;\n  };\n\n  const renderConfigure = () => {\n    return <Configure on={on} updateHandler={updateToggleButtons} />;\n  };\n\n  return (\n    <section>\n      <Route path=\"/\" exact render={renderHome} />\n      <Route path=\"/configure/\" exact render={renderConfigure} />\n    </section>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./navigation/Main.js\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Main />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}